openapi: 3.0.0

info:
  version: 0.0.1
  title: Api first service
  description: The Api first service
tags:
  - name: "Api first"

paths:

  /apiFirst/companies:
    get:
      summary: Company Api
      tags:
        - "Company"
      description: This is a description
      operationId: getCompanies
      responses:
        "200":
          description: Its ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
                  
                  
  /apiFirst/companies/{id}:
    parameters:
      - name: id
        description: id
        schema:
          type: string
        in: path
        required: true
    get:  
      summary: Company Api
      tags:
        - "Company"
      description: This is a description
      operationId: getCompanyById
      responses:
        "200":
          description: Its ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
      
  /apiFirst/companies/create:
    post:
      summary: Company Api
      tags:
        - "Company"
      description : created
      operationId: createCompany
      requestBody:
        description: company object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'        
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                type: string
                
  /apiFirst/companies/{idd}:
    parameters:
      - name: idd
        description: id param
        schema:
          type: string
        in: path
        required: true
    delete:  
      summary: Company Api
      tags:
        - "Company"
      description: delete
      operationId: deleteCompanyById
      responses:
        "200":
          description: Its ok
          content:
            application/json:
              schema:
                type: string
                
                
  /apiFirst/companies/{idp}:
    parameters:
      - name: idp
        description: idp
        schema:
          type: string
        in: path
        required: true
    put:
      summary: put
      tags:
        - "Company"      
      operationId: updateCompany
      requestBody:
        description: desc
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '200':
          description: Update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
     
  /apiFirst/drivers:
    get:
      summary: Driver summary
      tags:
        - "Driver"
      description: This is a description
      operationId: getDrivers
      responses:
        "200":
          description: Its ok, its fine
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Driver'


  /apiFirst/drivers/create:
    post:
      summary: Post
      operationId: createDriver
      requestBody:
        description: desc
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Driver'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string

  /apiFirst/goods:
    get:
      summary: Goods summary
      tags:
        - "Goods"
      description: This is a description
      operationId: getGoods
      responses:
        "200":
          description: Goods List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goods'

  /apiFirst/trucks:
    get:
      summary: This is summary
      tags:
        - "Truck"
      description: This is a description
      operationId: getTrucks
      responses:
        "200":
          description: Its ok, its fine
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Truck'

  /apiFirst/trucks/{id}:
    parameters:
      - name: id
        description: id
        schema:
          type: string
        in: path
        required: true
    get:
      summary: Get a truck by Id
      operationId: getTruck
      responses:
        "200":
          description: Single truck
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Truck'

  /apiFirst/trucks/create:
    post:
      summary: post
      operationId: createTruck
      requestBody:
        description: desc
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Truck'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string


  /apiFirst/trucks/{idt}:
    parameters:
      - name: idt
        description: idt
        schema:
          type: string
        in: path
        required: true
    put:
      summary: put
      operationId: updateTruck
      requestBody:
        description: desc
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Truck'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Truck'

  /apiFirst/trucks/{idd}:
    parameters:
      - name: idd
        description: idd
        schema:
          type: string
        in: path
        required: true
    delete:
      summary: delete
      description: dsd
      operationId: deleteTruck
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                type: string

  /apiFirst/trucks/goods/{goodsId}:
    parameters:
      - name: goodsId
        description: goods id
        schema:
          type: string
        in: path
        required: true
    get:
      summary: get trucks by goods id
      operationId: getTrucksByGoodsId
      responses:
        "200":
          description: created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Truck'
                  
                  
  /apiFirst/trucks/{truckId}/goods/{goodsId}:
    parameters:
      - name: truckId
        description: truck Id
        schema:
          type: string
        in: path
        required: true
      - name: goodsId
        description: goods Id
        schema:
          type: string
        in: path
        required: true          
    put:
      summary: assign truck to goods
      operationId: assignTruckToGoods
      responses:
        "200":
          description: created
          content:
            application/json:
              schema:
                type: string

components:
  schemas:
    Company:
      description: company
      type: object
      properties:
        id:
          description: id
          type: string
        name:
          description: name
          type: string
        location:
          description: location
          type: string
        drivers:
          type: array
          items:
            $ref: '#/components/schemas/Driver'

    Driver:
      description: driver
      type: object
      properties:
        id:
          description: Id of driver
          type: string
        name:
          description: name
          type: string
        experience:
          description: experience
          type: integer
        company:
          type:
          $ref: '#/components/schemas/Company'
        truck:
          type:
          $ref: '#/components/schemas/Truck'

    Truck:
      description: This is the truck model
      type: object
      properties:
        id:
          description: Id of the truck
          type: string
        weight:
          description: weight
          type: integer
        age:
          description: age manufactured
          type: integer
        driver:
          type:
          $ref: '#/components/schemas/Driver'
        goods:
          type: array
          items:
            $ref: '#/components/schemas/Goods'

    Goods:
      description: This is goods
      type: object
      properties:
        id:
          description: id
          type: string
        name:
          description: name
          type: string
        category:
          description: category
          type: string
        trucks:
          type: array
          items:
            $ref: '#/components/schemas/Truck'