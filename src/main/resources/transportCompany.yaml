openapi: 3.0.0

info:
  version: 0.0.1
  title: Transport Company
  description: Transport Company Api

paths:

# Company Api
# Get all companies
  /apiFirst/companies:
    get:
      tags:
        - "Company"
      description: Get all companies
      operationId: getCompanies
      responses:
        "200":
          description: Completed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyDto'

# Find by company id
  /apiFirst/companies/{id}:
    parameters:
      - name: id
        description: id
        schema:
          type: integer
        in: path
        required: true
    get:
      tags:
        - "Company"
      description: Get company by id
      operationId: getCompanyById
      responses:
        "200":
          description: Completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDto'

# Create company
  /apiFirst/companies/create:
    post:
      tags:
        - "Company"
      description : Create company
      operationId: createCompany
      requestBody:
        description: Company object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyDto'
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                type: string

# Update company
  /apiFirst/companies/{idp}:
    parameters:
      - name: idp
        description: id param
        schema:
          type: integer
        in: path
        required: true
    put:
      tags:
        - "Company"
      description: Update company
      operationId: updateCompany
      requestBody:
        description: Updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyDto'
      responses:
        '200':
          description: Update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDto'

# Delete company
  /apiFirst/companies/{idd}:
    parameters:
      - name: idd
        description: id param
        schema:
          type: integer
        in: path
        required: true
    delete:
      tags:
        - "Company"
      description: Delete company
      operationId: deleteCompanyById
      responses:
        "200":
          description: Deleted
          content:
            application/json:
              schema:
                type: string

# Search companies
  /apiFirst/companies/search/critApi:
    parameters:
      - name: name
        description: name
        schema:
          type: string
        in: query
        required: false
      - name: location
        description: location
        schema:
          type: string
        in: query
        required: false        
      - name: founded
        description: founded
        schema:
          type: integer
        in: query
        required: false 
    get:
      tags:
        - "Company"
      description: Search using criteria api
      operationId: searchCompaniesByCriteriaApi 
      responses:
        "200":
          description: Completed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyDto'

# Driver Api
# Get all drivers
  /apiFirst/drivers:
    get:
      tags:
        - "Driver"
      description: Get all drivers
      operationId: getDrivers
      responses:
        "200":
          description: Completed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DriverDto'

# Get driver by id
  /apiFirst/drivers/{id}:
    parameters:
      - name: id
        description: id param
        schema:
          type: integer
        in: path
        required: true
    get:
      tags:
        - "Driver"
      description: Get driver by id
      operationId: getDriverById
      responses:
        "200":
          description: Completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverDto'
  
# Create driver  
  /apiFirst/drivers/create:
    post:
      tags:
        - "Driver"
      description: Create driver
      operationId: createDriver
      requestBody:
        description: driver object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string

# Update Driver                
  /apiFirst/drivers/{idp}:
    parameters:
      - name: idp
        description: idp
        schema:
          type: integer
        in: path
        required: true
    put:
      tags:
        - "Driver"
      description: Update driver
      operationId: updateDriver
      requestBody:
        description: Updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverDto'
      responses:
        '200':
          description: Update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverDto'                

# Delete driver
  /apiFirst/drivers/{idd}:
    parameters:
      - name: idd
        description: id param
        schema:
          type: integer
        in: path
        required: true
    delete:
      tags:
        - "Driver"
      description: Delete driver
      operationId: deleteDriverById
      responses:
        "200":
          description: Deleted
          content:
            application/json:
              schema:
                type: string
                
# Search drivers                
  /apiFirst/drivers/search/critApi:
    parameters:
      - name: name
        description: name
        schema:
          type: string
        in: query
        required: false
      - name: experience
        description: experience
        schema:
          type: integer
        in: query
        required: false 
      - name: companyId
        description: companyId
        schema:
          type: integer
        in: query
        required: false        
    get:
      tags:
        - "Driver"
      description: Search drivers using criteria api
      operationId: searchDriversByCriteriaApi 
      responses:
        "200":
          description: Completed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DriverDto'



# Truck Api
# Get all trucks
  /apiFirst/trucks:
    get:
      tags:
        - "Truck"
      description: Get all trucks
      operationId: getTrucks
      responses:
        "200":
          description: Completed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TruckDto'

# Get truck by id
  /apiFirst/trucks/{id}:
    parameters:
      - name: id
        description: id param
        schema:
          type: integer
        in: path
        required: true
    get:
      tags:
        - "Truck"
      description: Get truck by id
      operationId: getTruckById
      responses:
        "200":
          description: Completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TruckDto'

# Create truck
  /apiFirst/trucks/create:
    post:
      tags:
        - "Truck"
      description: Create Truck 
      operationId: createTruck
      requestBody:
        description: Truck object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TruckDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string

# Update truck
  /apiFirst/trucks/{idp}:
    parameters:
      - name: idp
        description: id param
        schema:
          type: integer
        in: path
        required: true
    put:
      tags:
        - "Truck"
      description: Update truck
      operationId: updateTruck
      requestBody:
        description: truck object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TruckDto'
      responses:
        '201':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TruckDto'

# Delete truck
  /apiFirst/trucks/{idd}:
    parameters:
      - name: idd
        description: id param
        schema:
          type: integer
        in: path
        required: true
    delete:
      tags:
        - "Truck"
      description: Delete Truck
      operationId: deleteTruck
      responses:
        "200":
          description: Deleted
          content:
            application/json:
              schema:
                type: string
            
# Search trucks                
  /apiFirst/trucks/search/critApi:
    parameters:
      - name: vehicleWeight
        description: vehicle weight
        schema:
          type: integer
        in: query
        required: false
      - name: model
        description: model
        schema:
          type: string
        in: query
        required: false       
      - name: manufacturer
        description: manufacturer
        schema:
          type: string
        in: query
        required: false   
      - name: yearManufactured
        description: year of manufacture
        schema:
          type: integer
        in: query
        required: false   
      - name: horsePower
        description: horse power
        schema:
          type: integer
        in: query
        required: false   
      - name: torque
        description: torque
        schema:
          type: integer
        in: query
        required: false   
      - name: cargoCapacity
        description: cargo capacity
        schema:
          type: number
          format: double
        in: query
        required: false   
      - name: aerodynamics
        description: aerodynamics
        schema:
          type: boolean
        in: query
        required: false   
      - name: fuelType
        description: fuel type
        schema:
          $ref: '#/components/schemas/FuelType'
        in: query
        required: false
    get:
      tags:
        - "Truck"
      description: Search trucks using criteria api 
      operationId: searchTrucksByCriteriaApi 
      responses:
        "200":
          description: Completed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TruckDto'

# Search trucks using queryDsl
  /apiFirst/trucks/search/queryDsl:
    parameters:
      - name: vehicleWeight
        description: vehicle weight
        schema:
          type: integer
        in: query
        required: false
      - name: model
        description: model
        schema:
          type: string
        in: query
        required: false       
      - name: manufacturer
        description: manufacturer
        schema:
          type: string
        in: query
        required: false   
      - name: yearManufactured
        description: year of manufacture
        schema:
          type: integer
        in: query
        required: false   
      - name: horsePower
        description: horse power
        schema:
          type: integer
        in: query
        required: false   
      - name: torque
        description: torque
        schema:
          type: integer
        in: query
        required: false   
      - name: cargoCapacity
        description: cargo capacity
        schema:
          type: number
          format: double
        in: query
        required: false   
      - name: aerodynamics
        description: aerodynamics
        schema:
          type: boolean
        in: query
        required: false   
      - name: fuelType
        description: fuel type
        schema:
          $ref: '#/components/schemas/FuelType'
        in: query
        required: false
    get:
      tags:
        - "Truck"
      description: Search trucks using QueryDsl         
      operationId: searchTrucksByQueryDsl  
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TruckDto'

# Shipment Api
# Get all shipmets
  /apiFirst/shipments:
    get:
      tags:
        - "Shipment"
      description: Get all shipments
      operationId: getShipments
      responses:
        "200":
          description: Completed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentDto'

# Find by shipment id
  /apiFirst/shipments/{id}:
    parameters:
      - name: id
        description: id
        schema:
          type: integer
        in: path
        required: true
    get:
      tags:
        - "Shipment"
      description: Get shipment by id
      operationId: getShipmentById
      responses:
        "200":
          description: Completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentDto'

# Create shipment
  /apiFirst/shipment/create:
    post:
      tags:
        - "Shipment"
      description : Create Shipment
      operationId: createShipment
      requestBody:
        description: Shipment object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentDto'
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                type: string

# Update shipment
  /apiFirst/shipments/{idp}:
    parameters:
      - name: idp
        description: idp
        schema:
          type: integer
        in: path
        required: true
    put:
      tags:
        - "Shipment"
      description: Update Shipment  
      operationId: updateShipment
      requestBody:
        description: Updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentDto'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentDto'

# Delete shipment
  /apiFirst/shipments/{idd}:
    parameters:
      - name: idd
        description: id param
        schema:
          type: integer
        in: path
        required: true
    delete:
      tags:
        - "Shipment"
      description: Delete shipment by id
      operationId: deleteShipmentById
      responses:
        "200":
          description: Deleted
          content:
            application/json:
              schema:
                type: string

# Search shipments                  
  /apiFirst/shipments/search/critApi:
    parameters:
      - name: destination
        description: destination
        schema:
          type: string
        in: query
        required: false        
      - name: distance
        description: distance
        schema:
          type: number
          format: double
        in: query
        required: false
      - name: truckId
        description: truck id
        schema:
          type: integer
        in: query
        required: false          
    get:
      tags:
        - "Shipment"
      description: Search shipments using CriteriaApi
      operationId: searchShipmentsByCriteriaApi 
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentDto'

# Goods Api
# Get all goods
  /apiFirst/goods:
    get:
      tags:
        - "Goods"
      description: Get all goods
      operationId: getGoods
      responses:
        "200":
          description: Completed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GoodsDto'

# Get goods by id
  /apiFirst/goods/{id}:
    parameters:
      - name: id
        description: id param
        schema:
          type: integer
        in: path
        required: true
    get:
      tags:
        - "Goods"
      description: Get goods by id
      operationId: getGoodsById
      responses:
        "200":
          description: Completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsDto'

# Create goods
  /apiFirst/goods/create:
    post:
      tags:
        - "Goods"
      description : Create goods
      operationId: createGoods
      requestBody:
        description: goods object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsDto'
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                type: string
# Update Goods
  /apiFirst/goods/{idp}:
    parameters:
      - name: idp
        description: id param
        schema:
          type: integer
        in: path
        required: true
    put:
      tags:
        - "Goods"
      description: Update Goods
      operationId: updateGoods
      requestBody:
        description: Goods object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsDto'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsDto'

# Delete goods
  /apiFirst/goods/{idd}:
    parameters:
      - name: idd
        description: id param
        schema:
          type: integer
        in: path
        required: true
    delete:
      tags:
        - "Goods"
      description: Delete goods
      operationId: deleteGoodsById
      responses:
        "200":
          description: Deleted
          content:
            application/json:
              schema:
                type: string

# Search goods
  /apiFirst/goods/search/critApi:
    parameters:
      - name: name
        description: name
        schema:
          type: string
        in: query
        required: false
      - name: quantity
        description: quantity
        schema:
          type: integer
        in: query
        required: false        
    get:
      tags:
        - "Goods"
      description: Search goods by criteria api
      operationId: searchGoodsByCriteriaApi 
      responses:
        "200":
          description: Completed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GoodsDto'

# Object schemas
components:
  schemas:
    CompanyDto:
      description: Company
      type: object
      properties:
        id:
          description: id
          type: integer
        name:
          description: name
          type: string
        location:
          description: location
          type: string
        founded:
          description: year founded
          type: integer          
        drivers:
          type: array
          items:
            $ref: '#/components/schemas/DriverDto'

    DriverDto:
      description: Driver
      type: object
      properties:
        id:
          description: Id of driver
          type: integer
        name:
          description: name
          type: string
        experience:
          description: experience
          type: integer
        company:
          type:
          $ref: '#/components/schemas/CompanyDto'
        truck:
          type:
          $ref: '#/components/schemas/TruckDto'

    TruckDto:
      description: Truck
      type: object
      properties:
        id:
          description: Id of the truck
          type: integer
        vehicleWeight:
          description: vehicle weight
          type: integer
        model:
          description: model
          type: string
        manufacturer:
          description: name of the manufacturer
          type: string
        yearManufactured:
          description: year of manufacture
          type: integer
        horsePower:
          description: max horse power
          type: integer          
        torque:
          description: torque
          type: integer
        cargoCapacity:
          description: cargo capacity
          type: number          
          format: double
        aerodynamics:
          description: does it posses aerodynamics system
          type: boolean
        fuelType:
          $ref: '#/components/schemas/FuelType'
        driver:
          $ref: '#/components/schemas/DriverDto'
        shipment:
          type: array
          items:
            $ref: '#/components/schemas/ShipmentDto'

    FuelType:
      description: Fuel types
      type: string 
      enum:
        - GASOLINE
        - DIESEL
        - ETHANOL
        - LIQUID_PETROLEUM_GAS
        - BIO_DIESEL
        - COMPRESSED_NATURAL_GAS
        - ELECTRIC_POWER
    GoodsDto:
      description: Goods
      type: object
      properties:
        id:
          description: id
          type: integer
        name:
          description: name
          type: string
        quantity:
          description: quantity of the goods
          type: integer
        shipments:
          type: array
          items:
            $ref: '#/components/schemas/ShipmentDto'
                        
    ShipmentDto:
      description: Shipment
      type: object
      properties:
        id:
          description: id
          type: integer
        dateLoaded:
          description: dateLoaded
          type: string        
        destination:
          description: destination
          type: string
        distance:
          description: distance
          type: number
          format: double
        goods:
          type: array
          items:
            $ref: '#/components/schemas/GoodsDto'
        truck:
          $ref: '#/components/schemas/TruckDto'            

